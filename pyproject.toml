[project]
name = "sparql-rc2-backend"
version = "0.2.0"
description = ""
authors = [
    {name = "Nizo Priskorn",email = "68460690+dpriskorn@users.noreply.github.com"}
]
license = {text = "GPLv3+"}
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "pydantic (>=2.11.7,<3.0.0)",
    "fastapi (>=0.116.1,<0.117.0)",
    "pymysql (>=1.1.1,<2.0.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "fastapi-cache2 (>=0.2.2,<0.3.0)",
]

[tool.poetry.group.dev.dependencies]
rich = "^13.4.2"
black = "^24.3.0"
codespell = "^2.2.1"
coverage = "^6.5.0"
dead = "^1.5.0"
mypy = "^1.1.1"
pre-commit = "^2.20.0"
pytest = "^8.1.3"
ruff = "^0.0.263"
# safety = "^2.2.0"
tomli = "^2.0.1"
types-python-dateutil = "^2.8.19.2"
types-requests = "^2.28.11.2"
types-pymysql = "^1.1.0.20250822"

[tool.ruff]
select = [
  "A",      # flake8-builtins
#  "ASYNC",  # flake8-async
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "FBT",    # flake8-boolean-trap
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "N",      # pep8-naming
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "PYI",    # flake8-pyi
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "ANN",  # flake8-annotations
  # "COM",  # flake8-commas
  # "D",    # pydocstyle
  # "DJ",   # flake8-django
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "NPY",  # NumPy-specific rules
  # "PD",   # pandas-vet
  # "Q",    # flake8-quotes
  # "RET",  # flake8-return
  # "T20",  # flake8-print
  # "TRY",  # tryceratops
]
ignore = [
  "A003",
  "ARG001",
  "ARG002",
  "B008", # Query()
  "DTZ003",
  "EXE002",
  "F401",
  "FBT001",
  "FBT002",
  "G003",
  "G004",
  "INP001",
  "N805", # dont warn about missing self
  "N999",
  "PGH003",
  "PLC1901",
  "PLR0913",
  "PLR2004",
  "PLR5501",
  "PLW2901",
  "PTH110",
  "PTH123",
  #"RUF012", # Error: src/models/api/handlers/all.py:18:35: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
  "RSE102",
  "S113",
  "S324",
  "S501",
  "UP017", # dont complain about datetime.UTC
  ]
line-length = 160
target-version = "py38"

[tool.ruff.isort]
known-first-party = ["config"]

[tool.ruff.mccabe]
max-complexity = 11

[tool.ruff.per-file-ignores]
"tests/*" = ["PT009", "PT018", "RUF001", "RUF003", "S101", "ISC001"]
# "entityvalidator/models/compareshape.py" = ["SIM114"]

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false
